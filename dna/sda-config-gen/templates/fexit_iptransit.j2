{%- import 'macros.j2' as macros %}
{%- set local_config = config.fexit[local] %}
! SDA {{ local }}
! {{ local_config.hostname }}

! fix svi + bgp neighbors after dnac has deployed
{%- for vrf in config.iptransit[local].fusion1 %}
interface Vlan{{ config.iptransit[local].fusion1[vrf].tag }}
 description link; {{ config.fusion.fusion1.hostname }}; {{ config.fusion.fusion1.interfaces[local].port }}.{{ config.iptransit[local].fusion1[vrf].tag }}; {{ macros.get_vrf(config.iptransit[local].fusion1[vrf].vrf, vrf) }}
!
{%- endfor %}
{%- for vrf in config.iptransit[local].fusion2 %}
interface Vlan{{ config.iptransit[local].fusion2[vrf].tag }}
 description link; {{ config.fusion.fusion2.hostname }}; {{ config.fusion.fusion2.interfaces[local].port }}.{{ config.iptransit[local].fusion2[vrf].tag }}; {{ macros.get_vrf(config.iptransit[local].fusion2[vrf].vrf, vrf) }}
!
{%- endfor %}
!
router bgp {{ config.fexit.asn }}
  {{ macros.bgp_neighbor_iptransit_last_ip(
    config.iptransit[local].fusion1.INFRA_VN.linknet,
    "eBGP to FUSION1;  " + config.fusion.fusion1.hostname + "; " + config.fusion.fusion1.interfaces[local].port + "." + config.iptransit[local].fusion1['INFRA_VN'].tag + "; " + macros.get_vrf(config.iptransit[local].fusion1['INFRA_VN'].vrf, vrf),
  )}}
  {{ macros.bgp_neighbor_iptransit_last_ip(
    config.iptransit[local].fusion2.INFRA_VN.linknet,
    "eBGP to FUSION2;  " + config.fusion.fusion2.hostname + "; " + config.fusion.fusion2.interfaces[local].port + "." + config.iptransit[local].fusion2['INFRA_VN'].tag + "; " + macros.get_vrf(config.iptransit[local].fusion2['INFRA_VN'].vrf, vrf),
  )}}
  !
  ! FUSION1
{%- for vrf in config.iptransit[local].fusion1 %}
 {%- if vrf != 'INFRA_VN' %}
  address-family ipv4 vrf {{ vrf }}
    maximum-paths {{ config.global.bgp_paths }}
    neighbor {{ config.iptransit[local].fusion1[vrf].linknet | last_ip }} inherit peer-session BGP-SDA
    neighbor {{ config.iptransit[local].fusion1[vrf].linknet | last_ip }} description eBGP to FUSION1; {{ config.fusion.fusion1.hostname }}; {{ config.fusion.fusion1.interfaces[local].port }}.{{ config.iptransit[local].fusion1[vrf].tag }}; {{ macros.get_vrf(config.iptransit[local].fusion1[vrf].vrf, vrf) }}
  exit-address-family
  {%- endif %}
{%- endfor %}
  !
  ! FUSION 2
{%- for vrf in config.iptransit[local].fusion2 %}
 {%- if vrf != 'INFRA_VN' %}
  address-family ipv4 vrf {{ vrf }}
    maximum-paths {{ config.global.bgp_paths }}
    neighbor {{ config.iptransit[local].fusion2[vrf].linknet | last_ip }} inherit peer-session BGP-SDA
    neighbor {{ config.iptransit[local].fusion2[vrf].linknet | last_ip }} description eBGP to FUSION2; {{ config.fusion.fusion2.hostname }}; {{ config.fusion.fusion2.interfaces[local].port }}.{{ config.iptransit[local].fusion2[vrf].tag }}; {{ macros.get_vrf(config.iptransit[local].fusion2[vrf].vrf, vrf) }}
  exit-address-family
  {%- endif %}
{%- endfor %}
!
